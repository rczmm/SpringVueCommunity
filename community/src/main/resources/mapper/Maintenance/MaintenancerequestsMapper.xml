<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MaintenancerequestsMapper">
    
    <resultMap type="Maintenancerequests" id="MaintenancerequestsResult">
        <result property="requestID"    column="requestID"    />
        <result property="requesterName"    column="requesterName"    />
        <result property="requesterContact"    column="requesterContact"    />
        <result property="requestContent"    column="requestContent"    />
        <result property="status"    column="status"    />
        <result property="createdAt"    column="createdAt"    />
        <result property="updatedAt"    column="updatedAt"    />
    </resultMap>

    <sql id="selectMaintenancerequestsVo">
        select requestID, requesterName, requesterContact, requestContent, status, createdAt, updatedAt from maintenancerequests
    </sql>

    <select id="selectMaintenancerequestsList" parameterType="Maintenancerequests" resultMap="MaintenancerequestsResult">
        <include refid="selectMaintenancerequestsVo"/>
        <where>  
            <if test="requesterName != null  and requesterName != ''"> and requesterName like concat('%', #{requesterName}, '%')</if>
            <if test="requesterContact != null  and requesterContact != ''"> and requesterContact = #{requesterContact}</if>
            <if test="requestContent != null  and requestContent != ''"> and requestContent = #{requestContent}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="createdAt != null "> and createdAt = #{createdAt}</if>
            <if test="updatedAt != null "> and updatedAt = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectMaintenancerequestsByRequestID" parameterType="Long" resultMap="MaintenancerequestsResult">
        <include refid="selectMaintenancerequestsVo"/>
        where requestID = #{requestID}
    </select>
        
    <insert id="insertMaintenancerequests" parameterType="Maintenancerequests" useGeneratedKeys="true" keyProperty="requestID">
        insert into maintenancerequests
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="requesterName != null and requesterName != ''">requesterName,</if>
            <if test="requesterContact != null and requesterContact != ''">requesterContact,</if>
            <if test="requestContent != null and requestContent != ''">requestContent,</if>
            <if test="status != null">status,</if>
            <if test="createdAt != null">createdAt,</if>
            <if test="updatedAt != null">updatedAt,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="requesterName != null and requesterName != ''">#{requesterName},</if>
            <if test="requesterContact != null and requesterContact != ''">#{requesterContact},</if>
            <if test="requestContent != null and requestContent != ''">#{requestContent},</if>
            <if test="status != null">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateMaintenancerequests" parameterType="Maintenancerequests">
        update maintenancerequests
        <trim prefix="SET" suffixOverrides=",">
            <if test="requesterName != null and requesterName != ''">requesterName = #{requesterName},</if>
            <if test="requesterContact != null and requesterContact != ''">requesterContact = #{requesterContact},</if>
            <if test="requestContent != null and requestContent != ''">requestContent = #{requestContent},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createdAt != null">createdAt = #{createdAt},</if>
            <if test="updatedAt != null">updatedAt = #{updatedAt},</if>
        </trim>
        where requestID = #{requestID}
    </update>

    <delete id="deleteMaintenancerequestsByRequestID" parameterType="Long">
        delete from maintenancerequests where requestID = #{requestID}
    </delete>

    <delete id="deleteMaintenancerequestsByRequestIDs" parameterType="String">
        delete from maintenancerequests where requestID in 
        <foreach item="requestID" collection="array" open="(" separator="," close=")">
            #{requestID}
        </foreach>
    </delete>
</mapper>
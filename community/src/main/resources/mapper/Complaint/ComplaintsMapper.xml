<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ComplaintsMapper">
    
    <resultMap type="Complaints" id="ComplaintsResult">
        <result property="complaintID"    column="complaintID"    />
        <result property="complainantName"    column="complainantName"    />
        <result property="complainantContact"    column="complainantContact"    />
        <result property="complaintContent"    column="complaintContent"    />
        <result property="status"    column="status"    />
        <result property="createdAt"    column="createdAt"    />
        <result property="updatedAt"    column="updatedAt"    />
    </resultMap>

    <sql id="selectComplaintsVo">
        select complaintID, complainantName, complainantContact, complaintContent, status, createdAt, updatedAt from complaints
    </sql>

    <select id="selectComplaintsList" parameterType="Complaints" resultMap="ComplaintsResult">
        <include refid="selectComplaintsVo"/>
        <where>  
            <if test="complainantName != null  and complainantName != ''"> and complainantName like concat('%', #{complainantName}, '%')</if>
            <if test="complainantContact != null  and complainantContact != ''"> and complainantContact = #{complainantContact}</if>
            <if test="complaintContent != null  and complaintContent != ''"> and complaintContent = #{complaintContent}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="createdAt != null "> and createdAt = #{createdAt}</if>
            <if test="updatedAt != null "> and updatedAt = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectComplaintsByComplaintID" parameterType="Long" resultMap="ComplaintsResult">
        <include refid="selectComplaintsVo"/>
        where complaintID = #{complaintID}
    </select>
        
    <insert id="insertComplaints" parameterType="Complaints" useGeneratedKeys="true" keyProperty="complaintID">
        insert into complaints
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="complainantName != null and complainantName != ''">complainantName,</if>
            <if test="complainantContact != null and complainantContact != ''">complainantContact,</if>
            <if test="complaintContent != null and complaintContent != ''">complaintContent,</if>
            <if test="status != null">status,</if>
            <if test="createdAt != null">createdAt,</if>
            <if test="updatedAt != null">updatedAt,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="complainantName != null and complainantName != ''">#{complainantName},</if>
            <if test="complainantContact != null and complainantContact != ''">#{complainantContact},</if>
            <if test="complaintContent != null and complaintContent != ''">#{complaintContent},</if>
            <if test="status != null">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateComplaints" parameterType="Complaints">
        update complaints
        <trim prefix="SET" suffixOverrides=",">
            <if test="complainantName != null and complainantName != ''">complainantName = #{complainantName},</if>
            <if test="complainantContact != null and complainantContact != ''">complainantContact = #{complainantContact},</if>
            <if test="complaintContent != null and complaintContent != ''">complaintContent = #{complaintContent},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createdAt != null">createdAt = #{createdAt},</if>
            <if test="updatedAt != null">updatedAt = #{updatedAt},</if>
        </trim>
        where complaintID = #{complaintID}
    </update>

    <delete id="deleteComplaintsByComplaintID" parameterType="Long">
        delete from complaints where complaintID = #{complaintID}
    </delete>

    <delete id="deleteComplaintsByComplaintIDs" parameterType="String">
        delete from complaints where complaintID in 
        <foreach item="complaintID" collection="array" open="(" separator="," close=")">
            #{complaintID}
        </foreach>
    </delete>
</mapper>
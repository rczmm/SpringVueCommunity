<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ResidentsMapper">
    
    <resultMap type="Residents" id="ResidentsResult">
        <result property="residentID"    column="residentID"    />
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="dateOfBirth"    column="dateOfBirth"    />
        <result property="idnumber"    column="idnumber"    />
        <result property="contact"    column="contact"    />
        <result property="registeredAddress"    column="registeredAddress"    />
        <result property="residentialAddress"    column="residentialAddress"    />
        <result property="createdAt"    column="createdAt"    />
        <result property="updatedAt"    column="updatedAt"    />
    </resultMap>

    <sql id="selectResidentsVo">
        select residentID, name, gender, dateOfBirth, idnumber, contact, registeredAddress, residentialAddress, createdAt, updatedAt from residents
    </sql>

    <select id="selectResidentsList" parameterType="Residents" resultMap="ResidentsResult">
        <include refid="selectResidentsVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="dateOfBirth != null "> and dateOfBirth = #{dateOfBirth}</if>
            <if test="idnumber != null  and idnumber != ''"> and idnumber = #{idnumber}</if>
            <if test="contact != null  and contact != ''"> and contact = #{contact}</if>
            <if test="registeredAddress != null  and registeredAddress != ''"> and registeredAddress = #{registeredAddress}</if>
            <if test="residentialAddress != null  and residentialAddress != ''"> and residentialAddress = #{residentialAddress}</if>
            <if test="createdAt != null "> and createdAt = #{createdAt}</if>
            <if test="updatedAt != null "> and updatedAt = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectResidentsByResidentID" parameterType="Long" resultMap="ResidentsResult">
        <include refid="selectResidentsVo"/>
        where residentID = #{residentID}
    </select>
        
    <insert id="insertResidents" parameterType="Residents" useGeneratedKeys="true" keyProperty="residentID">
        insert into residents
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="dateOfBirth != null">dateOfBirth,</if>
            <if test="idnumber != null and idnumber != ''">idnumber,</if>
            <if test="contact != null and contact != ''">contact,</if>
            <if test="registeredAddress != null and registeredAddress != ''">registeredAddress,</if>
            <if test="residentialAddress != null and residentialAddress != ''">residentialAddress,</if>
            <if test="createdAt != null">createdAt,</if>
            <if test="updatedAt != null">updatedAt,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="dateOfBirth != null">#{dateOfBirth},</if>
            <if test="idnumber != null and idnumber != ''">#{idnumber},</if>
            <if test="contact != null and contact != ''">#{contact},</if>
            <if test="registeredAddress != null and registeredAddress != ''">#{registeredAddress},</if>
            <if test="residentialAddress != null and residentialAddress != ''">#{residentialAddress},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateResidents" parameterType="Residents">
        update residents
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="dateOfBirth != null">dateOfBirth = #{dateOfBirth},</if>
            <if test="idnumber != null and idnumber != ''">idnumber = #{idnumber},</if>
            <if test="contact != null and contact != ''">contact = #{contact},</if>
            <if test="registeredAddress != null and registeredAddress != ''">registeredAddress = #{registeredAddress},</if>
            <if test="residentialAddress != null and residentialAddress != ''">residentialAddress = #{residentialAddress},</if>
            <if test="createdAt != null">createdAt = #{createdAt},</if>
            <if test="updatedAt != null">updatedAt = #{updatedAt},</if>
        </trim>
        where residentID = #{residentID}
    </update>

    <delete id="deleteResidentsByResidentID" parameterType="Long">
        delete from residents where residentID = #{residentID}
    </delete>

    <delete id="deleteResidentsByResidentIDs" parameterType="String">
        delete from residents where residentID in 
        <foreach item="residentID" collection="array" open="(" separator="," close=")">
            #{residentID}
        </foreach>
    </delete>
</mapper>